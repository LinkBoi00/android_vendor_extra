From 33e6ae1bf79e32978dad6ce897cf6608899c5c06 Mon Sep 17 00:00:00 2001
From: Alex Naidis <alex.naidis@linux.com>
Date: Sun, 9 Apr 2017 01:29:27 +0200
Subject: [PATCH 1/9] init: Weaken property override security for the init
 extension

Sometimes we need to override ro.* properties by using our vendor init
extension.

Previously there was a security check which was blocking that.
To resolve the issue, we need to weaken the security check during the
execution of our vendor init extension.

This is safe because the vendor init extension gets executed as part of init
construction and it is considered a trusted system component.

Change-Id: I6095bbf92267fcb78ab53f37b5d7b443239ce80b
---
 init/property_service.cpp | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

diff --git a/init/property_service.cpp b/init/property_service.cpp
index 7fd64b389e..47bd27acab 100644
--- a/init/property_service.cpp
+++ b/init/property_service.cpp
@@ -119,6 +119,8 @@ struct PropertyAuditData {
     const char* name;
 };
 
+static bool weaken_prop_override_security = false;
+
 static int PropertyAuditCallback(void* data, security_class_t /*cls*/, char* buf, size_t len) {
     auto* d = reinterpret_cast<PropertyAuditData*>(data);
 
@@ -189,8 +191,8 @@ static uint32_t PropertySet(const std::string& name, const std::string& value, s
 
     prop_info* pi = (prop_info*) __system_property_find(name.c_str());
     if (pi != nullptr) {
-        // ro.* properties are actually "write-once".
-        if (StartsWith(name, "ro.")) {
+        // ro.* properties are actually "write-once", unless the system decides to
+        if (StartsWith(name, "ro.") && !weaken_prop_override_security) {
             *error = "Read-only property was already set";
             return PROP_ERROR_READ_ONLY_PROPERTY;
         }
@@ -1133,6 +1135,9 @@ void PropertyLoadBootDefaults() {
         }
     }
 
+    // Weaken property override security during execution of the vendor init extension
+    weaken_prop_override_security = true;
+
     // Update with vendor-specific property runtime overrides
     vendor_load_properties();
 
@@ -1144,6 +1149,9 @@ void PropertyLoadBootDefaults() {
     property_initialize_ro_vendor_api_level();
 
     update_sys_usb_config();
+
+    // Restore the normal property override security after init extension is executed
+    weaken_prop_override_security = false;
 }
 
 bool LoadPropertyInfoFromFile(const std::string& filename,
-- 
2.34.1

